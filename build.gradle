buildscript {
    repositories {
        maven {
            name = 'forge'
            url = 'http://files.minecraftforge.net/maven'
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'java'
    id 'org.spongepowered.plugin' version '0.8.1'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'

sourceCompatibility = targetCompatibility = '1.8'

version = '1.0.0'

repositories {
    maven { url 'https://jitpack.io' }

    flatDir {
        dirs 'Libraries/'
    }
    maven {
        url 'https://repo.maven.apache.org/maven2'
        name 'Maven Central'
    }

    ivy {
        setUrl('https://download.nodecdn.net/containers/reforged/server/release')
        metadataSources {
            artifact()
        }
        patternLayout {
            artifact('[revision]/[artifact].[ext]')
        }
    }
}

minecraft {
    mappings channel: 'snapshot', version: '20180814-1.12'
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'
    compile 'org.spongepowered:mixin:0.8.3-SNAPSHOT'
    compile 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'

    compileOnly fg.deobf('pixelmon:Pixelmon-1.12.2-8.4.0-server:8.4.0')


    implementation 'org.spongepowered:mixin:0.8.1-SNAPSHOT'

    annotationProcessor 'org.spongepowered:mixin:0.8.3-SNAPSHOT:processor'
}

mixin {
    defaultObfuscationEnv "notch"
}

sourceSets {
    main {
        ext.refMap = "mixins.pixelmon.refmap.json"
    }
}

mixin {
    add sourceSets.main, "mixins.pixelmon.refmap.json"
}

jar {
    manifest.attributes(
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'FMLCorePlugin': 'com.envyful.mixins.magic.hot.MixinsCoreMod',
            'FMLCorePluginContainsFMLMod': 'true'
    )
}

configurations {
    provided
    compile.extendsFrom provided
    compileJava.options.encoding = "UTF-8"
    jar.archiveName = rootProject.name + '.jar'
    compileJava.options.fork = true
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveName = 'MagicCoatHotFix.jar'

    exclude "**/module-info.class"
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
    }
}

task versionedRelease(type: Copy) {
    group "build"
    from('./build/libs/MagicCoatHotFix.jar')
    into('release/')
    include '*.jar'
    rename { String filename ->
        filename.replace(".jar", "-${project.version}.jar")
    }
}

jar.finalizedBy('reobfJar')
build.finalizedBy('versionedRelease')
